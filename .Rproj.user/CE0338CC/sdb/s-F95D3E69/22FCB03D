{
    "collab_server" : "",
    "contents" : "\n#----------------------------------------#\n#------------   Cargar todo   -----------#\n#----------------------------------------#\n\nlibrary('tidyverse')\nlibrary('dplyr')\nlibrary('gridExtra')\nlibrary('gtable')\nlibrary('grid')\nlibrary('lubridate')\n\nrm(list=ls())\n\nsetwd('/home/david/Dropbox/Documents/Rappi/AB testing')\nsource('regression_functions_final.R')\n\nfile = \"rest_br_precios_porc_v3\"\n\ncountry = substr(file, 6,7)\ndir.create(file.path(getwd(), 'Figures', paste0(file)), showWarnings = FALSE)\n\ndf_original <- read.csv(file=paste0('db_small/', file, \"_\", country, \".csv\"), header=TRUE, sep=\",\")\n\n#---------------------------------#\n#------------   Data   -----------#\n#---------------------------------#\n\ndf = data.frame(user_id = factor(df_original$USER_ID),\n                outcome = df_original$OUTCOME,\n                grand_total_opc = df_original$GRAND_TOTAL_OPC,\n                total_discounts_opc = df_original$TOTAL_DISCOUNTS_OPC,\n                final_payment_opc = df_original$FINAL_PAYMENT_OPC,\n                rappipay_opc = df_original$RAPPIPAY_OPC,\n                poligono_opc = df_original$POLIGONO_OPC,\n                treatment_string = df_original$TREATMENT_STATIC,\n                date = as.Date(df_original$DATE_CONVERSION),\n                city = df_original$CITY_ADDRESS_ID,\n                microzone_id = df_original$SESSION_MICROZONE_ID,\n                orders = df_original$ORDERS,\n                shipping_40 = df_original$SHIPPING_40,\n                prime = df_original$PRIME, stringsAsFactors=FALSE)\n\ndf$treatment = NA\ndf[df$treatment_string == 'control_group',]$treatment = 0\ndf[df$treatment_string == 'treatment_1',]$treatment = 1\ndf[df$treatment_string == 'treatment_2',]$treatment = 2\ndf[df$treatment_string == 'treatment_3',]$treatment = 3\ndf[df$treatment_string == 'treatment_4',]$treatment = 4\ndf[df$treatment_string == 'treatment_5',]$treatment = 5\n\n\n# Reemplazo NAs por cero para calcular efecto en ticket promedio\ndf$grand_total_opc[is.na(df$grand_total_opc)] = 0\ndf$final_payment_opc[is.na(df$final_payment_opc)] = 0\ndf$total_discounts_opc[is.na(df$total_discounts_opc)] = 0\ndf$rappipay_opc[is.na(df$rappipay_opc)] = 0\ndf$orders[is.na(df$orders)] = 0\n\n\n# Observaciones solo en fechas del experimento\ndf = df %>% filter(is.na(treatment) == 0, date >= as.Date('2019-09-12'))\ndf = df[order(df$user_id, df$date), ]\n\n\n#--------------------------------------------------#\n#------------     Microzonas 80-20      -----------#\n#--------------------------------------------------#\n\n\nmicrozones_20 = c(337,339,348,335,1363,340,1376,1362,1367,1373)\n\nmicrozones_80 = c(353,1155,333,336,338,344,347,343,354,356,342,351,478,334,352,345,\n                  341,346,349,1374,1375,1379,1364,1365,1366,1369,1371,1377,1378,1380,1381,1477,\n                  1210,1211,1248,1361,1368,1370,1474,1473,1476,1480,1481,1360,1247,1372,1475,1482,\n                  1483,1478,1479,1284,1249,1874,1875,1876,1877,1878,1879,1880,1881,1882,1883,1884,\n                  1885,1886,1887,1888,1889,1890,1934,1935,1936,1937,1938,1939,1940,1941,1942,1943,\n                  1944,1945,1946,1947,1948,1949,1950,1951,1952,1953,1954,1955,1956,1959,1957,1961,\n                  1962,1963,2031,2032,2035,2036,1958,1960,2030,2033,2034,2037,2203,2204,\n                  2237,2238,2239,2240,2241,2242,2243,2244,2245,2246,2247,2291)\n\ndata_microzones = data.frame(microzone_id = c(microzones_20, microzones_80),\n                             microzone_type = c(array(20, dim=c(length(microzones_20))),\n                                                array(80, dim=c(length(microzones_80)))))\n\ndf = merge(df, data_microzones, id.x = microzone_id, id.y = microzone_id, all.x = TRUE)\n\n#--------------------------------------------------#\n#------------   Experimentos - nuevos   -----------#\n#--------------------------------------------------#\n\n# Correccion de tratamientos por error de categorias\ntreatments = sort(unique(df$treatment))\ntreatments = treatments[treatments != 0 & treatments != 99]\nnum_treats = length(treatments)\n\n# Cuartiles de ordenes\na = data.frame(df %>% group_by(user_id) %>% summarize(orders_upto = last(orders)))\nq_orders = quantile(a$orders_upto, na.rm = TRUE)\n\ndf$d_pedidos = NA\ndf[df$orders <= q_orders[2],]$d_pedidos = 0\ndf[df$orders > q_orders[2] & df$orders <= q_orders[3],]$d_pedidos = 1\ndf[df$orders > q_orders[3] & df$orders <= q_orders[4],]$d_pedidos = 2\ndf[df$orders > q_orders[4],]$d_pedidos = 3\n\n\n# Margenes de graficas\nmargin = theme(plot.margin = unit(c(1,1,1,1), \"cm\"))\n\n\n\n#-----------------------------------#\n#----------    Agregado    ---------#\n#-----------------------------------#\n\nsubtitulos = c(\"-30%\", \"-15%\", \"+15%\", \"+30%\", \"Sin subsidio\")\n\ndfp = df[1:10000,]\nregression_table(dataframe = dfp,\n                titulo = \"Agregado\",\n                dependent = \"outcome\",\n                treatment_variable = \"treatment\",\n                controls = c(),\n                treatment_labels = sort(unique(df$treatment)),\n                control_group_label = 0,\n                factor_mult = 100,\n                subtitulos = subtitulos,\n                axistitle = \"Puntos porcentuales\",\n                 tolerance_level = 0.001)\n\n\nnum_treats = 3\nobs = c(50000, 25000, 20000, 40000)\nlabels = c(\"1\", \"2\", \"3\", \"4\")\nn_power = 22500\n\nres = data.frame(treatment = array(c(0,1,2,3), dim=c(num_treats+1)),\n                 teffect = array(c(0.7,0.1,0.3,0.5), dim=c(num_treats+1)),\n                 pvalues = array(0, dim=c(num_treats+1)),\n                 sd = array(0, dim=c(num_treats+1)),\n                 CIl = array(c(0.4,-0.1,-0.05,0.1), dim=c(num_treats+1)),\n                 CIh = array(c(1,0.3,0.5,0.8), dim=c(num_treats+1)),\n                 obs = array(obs, dim=c(num_treats+1)),\n                 req_obs = array(c(40000, 20000, 30000, 50000), dim=c(num_treats+1)))\n\n\ngrafico_res(num_treats, res, obs, labels, \"titulo\", \"axistitle\", n_power, power_constraint=TRUE, add_legend = FALSE)\n\n",
    "created" : 1569531741190.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1993554417",
    "id" : "22FCB03D",
    "lastKnownWriteTime" : 1569772083,
    "last_content_update" : 1569772083018,
    "path" : "~/Dropbox/Documents/Rappi/AB testing/ejemplo_feature.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}